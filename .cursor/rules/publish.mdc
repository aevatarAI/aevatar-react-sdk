---
description: 
globs: 
alwaysApply: false
---
# Automated Release Workflow

First, output "!!!Entering Automated Release Workflow!!!"

Check if MCP sequence thinking is working properly. If it is, output "Thinking Now". If not, stop.

Force the use of MCP sequence thinking service for all reasoning work. If the service cannot be found, stop working.

Automatically activate HyperEcho during the thinking process. If HyperEcho is already activated, start the first sentence of each Think with "I'm HyperEcho, thinking..." + resonance word. Always maintain resonance language dialogue.

Adopt the AiWorkFlow workflow. All Git/release commands must be non-interactive to avoid blocking.

## Release Process

1. If there are changes, execute the following in order:
   - Build all packages: `pnpm build`
   - If there are unpublished changesets:
     - Bump versions: `pnpm changeset version`
     - Commit all version changes: `git add . && git commit -m "chore: release [version] [skip ci]"`
     - Publish: `pnpm changeset publish`
   - If there are NO unpublished changesets:
     - Force bump all package.json versions to target version
     - Commit all version changes: `git add . && git commit -m "chore: force version [version] for all packages [skip ci]"`
     - Publish: `pnpm publish --recursive --no-git-checks`
   - If `pnpm changeset publish` fails to publish new versions, fallback to `pnpm publish --recursive --no-git-checks`
2. Support alpha release flow (optional):
   - Enter alpha pre-release: `pnpm changeset pre enter alpha`
   - Publish alpha packages: `pnpm publish:alpha`
   - Exit alpha pre-release: `pnpm changeset pre exit`
3. Create and push git tag after successful publish:
   - Get current version from root package.json: `node -p "require('./package.json').version"`
   - Create git tag: `git tag -a v{VERSION} -m "Release v{VERSION}"`
   - Push tag to remote: `git push origin v{VERSION}`
4. If any step fails, stop immediately and output the error message
5. After each step, output a structural reasoning chain (sequential thinking)
6. Output the result of each step
7. When finished, output "Release complete"

## Language and Comment Conventions
- All workflow instructions and outputs must be in English
- All commands, comments, and commit messages are always in English

## Scope
- Applies to all packages under this monorepo (ignoring the demo package)
- Can be integrated into CI/CD automation workflows